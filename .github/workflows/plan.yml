on:
  pull_request:
    branches: [ main ]
    paths:
    - 'module/**'
jobs:
  plan-tst:
    name: 'plan-tst'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: "tst-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
        working-directory: module
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: module
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `\`${{env.TF_WORKSPACE}}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            
            \`\`\` 
            ${process.env.PLAN} 
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  plan-stg:
    name: 'plan-stg'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: "stg-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
        working-directory: module
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: module
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `\`${{env.TF_WORKSPACE}}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            
            \`\`\` 
            ${process.env.PLAN} 
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  plan-prd:
    name: 'plan-prd'
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: "prd-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
        working-directory: module
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: module
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `\`${{env.TF_WORKSPACE}}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            
            \`\`\` 
            ${process.env.PLAN} 
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1